{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOAaJ/blbjgz2i7yH6jsxHd"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Clusterização"],"metadata":{"id":"eCMrh9KjaDy6"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"tWvvj_TXXrLU"},"outputs":[],"source":["import pandas as pd\n","from sklearn.cluster import KMeans\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["dados = pd.DataFrame({\n","    'idade':[35,30,29,50,45,32,33,22,15,18],\n","    'salario':[5000,4500,8900,2200,3600,8000,1200,3000,800,1200]\n","})\n","dados.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"SdCuX7puavXp","executionInfo":{"status":"ok","timestamp":1728647667763,"user_tz":180,"elapsed":279,"user":{"displayName":"Lily","userId":"16660113992098989816"}},"outputId":"898ad672-3eb4-434f-9373-4fb8b56a9653"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   idade  salario\n","0     35     5000\n","1     30     4500\n","2     29     8900\n","3     50     2200\n","4     45     3600"],"text/html":["\n","  <div id=\"df-47a07dc8-a341-4eeb-aafa-604000a61e48\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>idade</th>\n","      <th>salario</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>35</td>\n","      <td>5000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>30</td>\n","      <td>4500</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>29</td>\n","      <td>8900</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50</td>\n","      <td>2200</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>45</td>\n","      <td>3600</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47a07dc8-a341-4eeb-aafa-604000a61e48')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-47a07dc8-a341-4eeb-aafa-604000a61e48 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-47a07dc8-a341-4eeb-aafa-604000a61e48');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fc003c32-aa0e-47d5-bff0-c9232d2bfaa3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fc003c32-aa0e-47d5-bff0-c9232d2bfaa3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fc003c32-aa0e-47d5-bff0-c9232d2bfaa3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dados","summary":"{\n  \"name\": \"dados\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"idade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 15,\n        \"max\": 50,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          15,\n          30,\n          32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"salario\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2815,\n        \"min\": 800,\n        \"max\": 8900,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          3000,\n          4500,\n          8000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["plt.scatter(dados['idade'], dados['salario'])\n","plt.xlabel('idade')\n","plt.ylabel('salario')\n","plt.title('Dados de Eleitores')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"BMmiB9zxbj75","executionInfo":{"status":"ok","timestamp":1728647742477,"user_tz":180,"elapsed":583,"user":{"displayName":"Lily","userId":"16660113992098989816"}},"outputId":"1cfcd9f6-5f3c-4c01-9e0f-524fe20ee947"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["x = dados[['idade','salario']]\n","kmeans = KMeans(n_clusters=3)\n","kmeans.fit(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"_FB1BeTccCbd","executionInfo":{"status":"ok","timestamp":1728647873687,"user_tz":180,"elapsed":274,"user":{"displayName":"Lily","userId":"16660113992098989816"}},"outputId":"a5a11724-3743-44a2-b1df-f7b3f6495601"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KMeans(n_clusters=3)"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=3)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KMeans<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.cluster.KMeans.html\">?<span>Documentation for KMeans</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KMeans(n_clusters=3)</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["previsao = kmeans.predict(x)\n","previsao"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C2E4oqC1caCW","executionInfo":{"status":"ok","timestamp":1728647913459,"user_tz":180,"elapsed":336,"user":{"displayName":"Lily","userId":"16660113992098989816"}},"outputId":"b085fcf6-3210-494c-e248-4d3220d202f5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2, 2, 1, 0, 2, 1, 0, 0, 0, 0], dtype=int32)"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["dados['cluster'] = previsao\n","dados"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"vyTOpm7zcgWo","executionInfo":{"status":"ok","timestamp":1728647949094,"user_tz":180,"elapsed":278,"user":{"displayName":"Lily","userId":"16660113992098989816"}},"outputId":"43f60878-1fb9-4cc1-bf19-e1c67f168bc0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   idade  salario  cluster\n","0     35     5000        2\n","1     30     4500        2\n","2     29     8900        1\n","3     50     2200        0\n","4     45     3600        2\n","5     32     8000        1\n","6     33     1200        0\n","7     22     3000        0\n","8     15      800        0\n","9     18     1200        0"],"text/html":["\n","  <div id=\"df-9d345ee1-65b4-44c8-9041-d1585bb8d989\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>idade</th>\n","      <th>salario</th>\n","      <th>cluster</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>35</td>\n","      <td>5000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>30</td>\n","      <td>4500</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>29</td>\n","      <td>8900</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50</td>\n","      <td>2200</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>45</td>\n","      <td>3600</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>32</td>\n","      <td>8000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>33</td>\n","      <td>1200</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>22</td>\n","      <td>3000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>15</td>\n","      <td>800</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>18</td>\n","      <td>1200</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d345ee1-65b4-44c8-9041-d1585bb8d989')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9d345ee1-65b4-44c8-9041-d1585bb8d989 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9d345ee1-65b4-44c8-9041-d1585bb8d989');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7cd8e7b0-da17-4fa9-a649-6c75819ca78c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7cd8e7b0-da17-4fa9-a649-6c75819ca78c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7cd8e7b0-da17-4fa9-a649-6c75819ca78c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_73f0f71c-9ad4-4ca7-be43-b26a7e097a53\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dados')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_73f0f71c-9ad4-4ca7-be43-b26a7e097a53 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('dados');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dados","summary":"{\n  \"name\": \"dados\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"idade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 15,\n        \"max\": 50,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          15,\n          30,\n          32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"salario\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2815,\n        \"min\": 800,\n        \"max\": 8900,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          3000,\n          4500,\n          8000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["plt.scatter(dados['idade'], dados['salario'], c=dados['cluster'])\n","plt.xlabel('idade')\n","plt.ylabel('salario')\n","plt.title('Dados de Eleitores (K-Means)')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"GB7dGoTSerBR","executionInfo":{"status":"ok","timestamp":1728648517228,"user_tz":180,"elapsed":1144,"user":{"displayName":"Lily","userId":"16660113992098989816"}},"outputId":"04c0b762-2dfb-4cdc-c836-bc0b26d0e6ce"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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XaTo36Nbt0E7zwYW74uIqiarBqI+ffrgww8/RHR0NK5cuYKtW7di+fLl6N+/PwBAoVAgLCwMixYtwo4dO5CUlIQRI0bA09MT/fr1AwA0bdoUPXr0wPjx43HixAkcOXIEU6ZMweDBg+Hp6QkAGDp0KOzt7TF27FgkJyfjm2++wcqVKzF16lRrDZ2IKplCocDH3XtifudX8dwjV5c0rlMXS4KCMbtjF+s1R0RVj7Aio9Eo3nnnHdGwYUPh4OAgGjVqJN5//32Rm5sr1ZhMJjFnzhzh7u4uVCqV6Natm0hJSTFbz61bt8SQIUOEs7OzUKvVYvTo0SI7O9us5syZM6JDhw5CpVKJ5557Tnz00Udl7tNgMAgAwmAw/LUBE5FVmEwmcePePXHz3j1hMpms3Q4RWcizfH5b9T5E1QXvQ0RERFT9VJv7EBERERFVBQxEREREJHsMRERERCR7DEREREQkewxEREREJHsMRERERCR7DEREREQkewxEREREJHsMRERERCR7DEREREQkewxEREREJHsMRERERCR7DEREREQkewxEREREJHsMRERERCR7DEREREQkewxEREREJHsMRERERCR7DEREREQkewxEREREJHsMRERERCR7DEREREQkewxEREREJHsMRERERCR7DEREREQkewxEREREJHsMRERERCR7DEREREQkewxEREREJHsMRERERCR7Vg1Ezz//PBQKRbEpNDQUAJCTk4PQ0FDUq1cPzs7OGDhwIDIyMszWkZaWhpCQENSqVQtubm6YPn06CgoKzGoOHjyINm3aQKVSwdfXF1FRUZYaIhEREVUDVg1EJ0+exPXr16UpNjYWAPD3v/8dABAeHo4ffvgB3377LeLi4nDt2jUMGDBAenxhYSFCQkKQl5eHo0ePYsOGDYiKisLcuXOlmtTUVISEhKBr165ITExEWFgYxo0bh5iYGMsOloiIiKoshRBCWLuJImFhYdi5cycuXboEo9EIV1dXbNq0CYMGDQIAXLx4EU2bNkV8fDwCAwOxa9cu9O7dG9euXYO7uzsAYO3atZg5cyZu3LgBe3t7zJw5E9HR0Th37py0ncGDByMrKwu7d+8uU19GoxEajQYGgwFqtbriB05EREQV7lk+v6vMOUR5eXn46quvMGbMGCgUCiQkJCA/Px9BQUFSjb+/Pxo2bIj4+HgAQHx8PFq0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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#Random Forest"],"metadata":{"id":"rUfEF7mafWa-"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score\n","import pandas as pd"],"metadata":{"id":"sg3ezWekfaKl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["clientes = pd.read_csv('dados_clientes.csv')\n","clientes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"maINBHFEh7O4","executionInfo":{"status":"ok","timestamp":1728649482158,"user_tz":180,"elapsed":320,"user":{"displayName":"Lily","userId":"16660113992098989816"}},"outputId":"11761c14-c381-4791-adcd-5a6a42fc6f42"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    idade  renda  emprestimos  fez_novo_emprestimo\n","0      35   2800            1                    1\n","1      20   3900            2                    0\n","2      29   5000            3                    1\n","3      28   6000           10                    0\n","4      24   6850            2                    1\n","5      33   1200            1                    0\n","6      40    900            1                    0\n","7      45   3998            7                    1\n","8      31   1600            5                    1\n","9      39   2800            5                    0\n","10     40   3900            5                    0\n","11     42   5000            5                    1\n","12     43   6000            6                    1\n","13     45   6850            6                    1\n","14     46   1200            6                    1\n","15     47    900            7                    1\n","16     49   3998            7                    1\n","17     50   1600            7                    1\n","18     52   2800            7                    1\n","19     53   3900            8                    1\n","20     55   5550            8                    1\n","21     56   6000            8                    1\n","22     57   6850            8                    1\n","23     59   1480            9                    1\n","24     60    900            9                    1\n","25     62   3900            0                    1\n","26     63   1600            0                    1\n","27     65   2800            0                    1\n","28     66   3800            3                    1\n","29     67   5000            4                    1\n","30     69   6000            6                    1\n","31     70   6850            2                    1\n","32     72   1200            6                    0\n","33     73    760            4                    0\n","34     75   3998            6                    0\n","35     76   1600            6                    0\n","36     78   2800            7                    0\n","37     79   3900            8                    0\n","38     80   5000            8                    0\n","39     82   6000            9                    0\n","40     83   6700            9                    0\n","41     85   1200           10                    0\n","42     86    900           10                    0\n","43     88   3998            3                    1\n","44     89   1600            2                    1\n","45     90   2800            2                    1\n","46     92   3900            6                    1\n","47     93   5000            8                    0\n","48     95   6000            4                    0"],"text/html":["\n","  <div id=\"df-4f315b2a-debc-4797-8518-11f9f02a62ac\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>idade</th>\n","      <th>renda</th>\n","      <th>emprestimos</th>\n","      <th>fez_novo_emprestimo</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>35</td>\n","      <td>2800</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20</td>\n","      <td>3900</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>29</td>\n","      <td>5000</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>28</td>\n","      <td>6000</td>\n","      <td>10</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24</td>\n","      <td>6850</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>33</td>\n","      <td>1200</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>40</td>\n","      <td>900</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>45</td>\n","      <td>3998</td>\n","      <td>7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>31</td>\n","      <td>1600</td>\n","      <td>5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>39</td>\n","      <td>2800</td>\n","      <td>5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>40</td>\n","      <td>3900</td>\n","      <td>5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>42</td>\n","      <td>5000</td>\n","      <td>5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>43</td>\n","      <td>6000</td>\n","      <td>6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>45</td>\n","      <td>6850</td>\n","      <td>6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>46</td>\n","      <td>1200</td>\n","      <td>6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>47</td>\n","      <td>900</td>\n","      <td>7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>49</td>\n","      <td>3998</td>\n","      <td>7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>50</td>\n","      <td>1600</td>\n","      <td>7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>52</td>\n","      <td>2800</td>\n","      <td>7</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>53</td>\n","      <td>3900</td>\n","      <td>8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>55</td>\n","      <td>5550</td>\n","      <td>8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>56</td>\n","      <td>6000</td>\n","      <td>8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>57</td>\n","      <td>6850</td>\n","      <td>8</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>59</td>\n","      <td>1480</td>\n","      <td>9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>60</td>\n","      <td>900</td>\n","      <td>9</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>62</td>\n","      <td>3900</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>63</td>\n","      <td>1600</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>65</td>\n","      <td>2800</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>66</td>\n","      <td>3800</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>67</td>\n","      <td>5000</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>69</td>\n","      <td>6000</td>\n","      <td>6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>70</td>\n","      <td>6850</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>72</td>\n","      <td>1200</td>\n","      <td>6</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>73</td>\n","      <td>760</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>75</td>\n","      <td>3998</td>\n","      <td>6</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>76</td>\n","      <td>1600</td>\n","      <td>6</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>78</td>\n","      <td>2800</td>\n","      <td>7</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>79</td>\n","      <td>3900</td>\n","      <td>8</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>80</td>\n","      <td>5000</td>\n","      <td>8</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>82</td>\n","      <td>6000</td>\n","      <td>9</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>83</td>\n","      <td>6700</td>\n","      <td>9</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>85</td>\n","      <td>1200</td>\n","      <td>10</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>86</td>\n","      <td>900</td>\n","      <td>10</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>88</td>\n","      <td>3998</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>89</td>\n","      <td>1600</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>90</td>\n","      <td>2800</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>92</td>\n","      <td>3900</td>\n","      <td>6</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>93</td>\n","      <td>5000</td>\n","      <td>8</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>95</td>\n","      <td>6000</td>\n","      <td>4</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4f315b2a-debc-4797-8518-11f9f02a62ac')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4f315b2a-debc-4797-8518-11f9f02a62ac button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4f315b2a-debc-4797-8518-11f9f02a62ac');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4adf2113-87d0-41f5-8cef-0ca99063aa87\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4adf2113-87d0-41f5-8cef-0ca99063aa87')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4adf2113-87d0-41f5-8cef-0ca99063aa87 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_29a73d8b-716c-45e8-90ce-b1a47fa09bd3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('clientes')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_29a73d8b-716c-45e8-90ce-b1a47fa09bd3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('clientes');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"clientes","summary":"{\n  \"name\": \"clientes\",\n  \"rows\": 49,\n  \"fields\": [\n    {\n      \"column\": \"idade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20,\n        \"min\": 20,\n        \"max\": 95,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          67,\n          85,\n          66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"renda\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1987,\n        \"min\": 760,\n        \"max\": 6850,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          5550,\n          3800,\n          2800\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"emprestimos\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          5,\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fez_novo_emprestimo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["x = clientes.drop('fez_novo_emprestimo',axis=1)\n","y = clientes['fez_novo_emprestimo']"],"metadata":{"id":"vTLJUHGsigtj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_treino, x_teste, y_treino, y_teste = train_test_split(x,y,test_size=0.2, random_state=42)"],"metadata":{"id":"92y4nVEfi9Me"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["modelo = RandomForestClassifier(n_estimators=100,random_state=42)\n","modelo.fit(x_treino, y_treino)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"g8-ev1KsjPEV","executionInfo":{"status":"ok","timestamp":1728649741493,"user_tz":180,"elapsed":250,"user":{"displayName":"Lily","userId":"16660113992098989816"}},"outputId":"ab007680-794b-4b9e-eba9-fca99ec412b3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(random_state=42)"],"text/html":["<style>#sk-container-id-2 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-2 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-2 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-2 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-2 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-2 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-2 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-2 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-2 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-2 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-2 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-2 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-2 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-2 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-2 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-2 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-2 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;RandomForestClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier(random_state=42)</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["y_predicao = modelo.predict(x_teste)\n","y_predicao"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_2_jacP2je2Q","executionInfo":{"status":"ok","timestamp":1728649778629,"user_tz":180,"elapsed":239,"user":{"displayName":"Lily","userId":"16660113992098989816"}},"outputId":"c532ae2b-bb9f-458b-9e5c-1fad2089515a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 0, 0, 1, 1, 1, 1, 1, 1])"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["acuracia = accuracy_score(y_teste, y_predicao)\n","acuracia"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"okeON6oFjn4Q","executionInfo":{"status":"ok","timestamp":1728649804367,"user_tz":180,"elapsed":258,"user":{"displayName":"Lily","userId":"16660113992098989816"}},"outputId":"abfa87fd-2475-43c4-9d4b-b391328c8b1b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["nova_cliente = pd.DataFrame({\n","    'idade':[17],\n","    'renda':[2000],\n","    'emprestimos':[1]\n","})\n","dados.head()\n","nova_previsao = modelo.predict(nova_cliente)\n","nova_previsao"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YgJPWLHokJ45","executionInfo":{"status":"ok","timestamp":1728650138651,"user_tz":180,"elapsed":260,"user":{"displayName":"Lily","userId":"16660113992098989816"}},"outputId":"73f1c953-cfac-41a1-bef3-5f6e6c5f84d9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0])"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["x = clientes[['idade', 'renda', 'emprestimos']]\n","kmeans = KMeans(n_clusters=4)\n","kmeans.fit(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"eDrxI2SDlVC6","executionInfo":{"status":"ok","timestamp":1728650337229,"user_tz":180,"elapsed":265,"user":{"displayName":"Lily","userId":"16660113992098989816"}},"outputId":"33ad2624-188a-49e9-aee0-09ea983b6e33"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KMeans(n_clusters=4)"],"text/html":["<style>#sk-container-id-3 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-3 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-3 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-3 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-3 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-3 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-3 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-3 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-3 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-3 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-3 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-3 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-3 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-3 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-3 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-3 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-3 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-3 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-3 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-3 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-3 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-3 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-3 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-3 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-3 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-3 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-3 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-3 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-3 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-3 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-3 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-3 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-3 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-3 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-3 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-3 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=4)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KMeans<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.cluster.KMeans.html\">?<span>Documentation for KMeans</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KMeans(n_clusters=4)</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["previsao = kmeans.predict(x)\n","previsao"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yiXasfv-lwe6","executionInfo":{"status":"ok","timestamp":1728650375530,"user_tz":180,"elapsed":239,"user":{"displayName":"Lily","userId":"16660113992098989816"}},"outputId":"4c79c82d-3406-40d4-e950-b169094d284e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 3, 3, 0, 0, 2, 2, 3, 2, 1, 3, 3, 0, 0, 2, 2, 3, 2, 1, 3, 0, 0,\n","       0, 2, 2, 3, 2, 1, 3, 3, 0, 0, 2, 2, 3, 2, 1, 3, 3, 0, 0, 2, 2, 3,\n","       2, 1, 3, 3, 0], dtype=int32)"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["clientes['cluster'] = previsao\n","clientes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"xPW-4fFFl3oa","executionInfo":{"status":"ok","timestamp":1728650390902,"user_tz":180,"elapsed":246,"user":{"displayName":"Lily","userId":"16660113992098989816"}},"outputId":"12189d98-878a-49d2-ab48-221aa3f8a523"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    idade  renda  emprestimos  fez_novo_emprestimo  cluster\n","0      35   2800            1                    1        1\n","1      20   3900            2                    0        3\n","2      29   5000            3                    1        3\n","3      28   6000           10                    0        0\n","4      24   6850            2                    1        0\n","5      33   1200            1                    0        2\n","6      40    900            1                    0        2\n","7      45   3998            7                    1        3\n","8      31   1600            5                    1        2\n","9      39   2800            5                    0        1\n","10     40   3900            5                    0        3\n","11     42   5000            5                    1        3\n","12     43   6000            6                    1        0\n","13     45   6850            6                    1        0\n","14     46   1200            6                    1        2\n","15     47    900            7                    1        2\n","16     49   3998            7                    1        3\n","17     50   1600            7                    1        2\n","18     52   2800            7                    1        1\n","19     53   3900            8                    1        3\n","20     55   5550            8                    1        0\n","21     56   6000            8                    1        0\n","22     57   6850            8                    1        0\n","23     59   1480            9                    1        2\n","24     60    900            9                    1        2\n","25     62   3900            0                    1        3\n","26     63   1600            0                    1        2\n","27     65   2800            0                    1        1\n","28     66   3800            3                    1        3\n","29     67   5000            4                    1        3\n","30     69   6000            6                    1        0\n","31     70   6850            2                    1        0\n","32     72   1200            6                    0        2\n","33     73    760            4                    0        2\n","34     75   3998            6                    0        3\n","35     76   1600            6                    0        2\n","36     78   2800            7                    0        1\n","37     79   3900            8                    0        3\n","38     80   5000            8                    0        3\n","39     82   6000            9                    0        0\n","40     83   6700            9                    0        0\n","41     85   1200           10                    0        2\n","42     86    900           10                    0        2\n","43     88   3998            3                    1        3\n","44     89   1600            2                    1        2\n","45     90   2800            2                    1        1\n","46     92   3900            6                    1        3\n","47     93   5000            8                    0        3\n","48     95   6000            4                    0        0"],"text/html":["\n","  <div id=\"df-aa9210ac-d6a7-4af3-924e-7092eda23d97\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>idade</th>\n","      <th>renda</th>\n","      <th>emprestimos</th>\n","      <th>fez_novo_emprestimo</th>\n","      <th>cluster</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>35</td>\n","      <td>2800</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20</td>\n","      <td>3900</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>29</td>\n","      <td>5000</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>28</td>\n","      <td>6000</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24</td>\n","      <td>6850</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>33</td>\n","      <td>1200</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>40</td>\n","      <td>900</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>45</td>\n","      <td>3998</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>31</td>\n","      <td>1600</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>39</td>\n","      <td>2800</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>40</td>\n","      <td>3900</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>42</td>\n","      <td>5000</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>43</td>\n","      <td>6000</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>45</td>\n","      <td>6850</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>46</td>\n","      <td>1200</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>47</td>\n","      <td>900</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>49</td>\n","      <td>3998</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>50</td>\n","      <td>1600</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>52</td>\n","      <td>2800</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>53</td>\n","      <td>3900</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>55</td>\n","      <td>5550</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>56</td>\n","      <td>6000</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>57</td>\n","      <td>6850</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>59</td>\n","      <td>1480</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>60</td>\n","      <td>900</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>62</td>\n","      <td>3900</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>63</td>\n","      <td>1600</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>65</td>\n","      <td>2800</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>66</td>\n","      <td>3800</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>67</td>\n","      <td>5000</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>69</td>\n","      <td>6000</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>70</td>\n","      <td>6850</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>72</td>\n","      <td>1200</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>73</td>\n","      <td>760</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>75</td>\n","      <td>3998</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>76</td>\n","      <td>1600</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>78</td>\n","      <td>2800</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>79</td>\n","      <td>3900</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>80</td>\n","      <td>5000</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>82</td>\n","      <td>6000</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>83</td>\n","      <td>6700</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>85</td>\n","      <td>1200</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>86</td>\n","      <td>900</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>88</td>\n","      <td>3998</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>89</td>\n","      <td>1600</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>90</td>\n","      <td>2800</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>92</td>\n","      <td>3900</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>93</td>\n","      <td>5000</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>95</td>\n","      <td>6000</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aa9210ac-d6a7-4af3-924e-7092eda23d97')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-aa9210ac-d6a7-4af3-924e-7092eda23d97 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-aa9210ac-d6a7-4af3-924e-7092eda23d97');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1613cb84-2def-46b5-af00-5006c0562687\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1613cb84-2def-46b5-af00-5006c0562687')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1613cb84-2def-46b5-af00-5006c0562687 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_83488802-388e-49a5-aa7f-06f0d3d0e04c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('clientes')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_83488802-388e-49a5-aa7f-06f0d3d0e04c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('clientes');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"clientes","summary":"{\n  \"name\": \"clientes\",\n  \"rows\": 49,\n  \"fields\": [\n    {\n      \"column\": \"idade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20,\n        \"min\": 20,\n        \"max\": 95,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          67,\n          85,\n          66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"renda\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1987,\n        \"min\": 760,\n        \"max\": 6850,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          5550,\n          3800,\n          2800\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"emprestimos\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          5,\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fez_novo_emprestimo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["plt.scatter(clientes['idade'], clientes['emprestimos'], c=clientes['cluster'])\n","plt.xlabel('idade')\n","plt.ylabel('renda')\n","plt.title('Dados de Clientes (Oportunidade de Vendas de Empréstimo)')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"hj6lnc6-mWbZ","executionInfo":{"status":"ok","timestamp":1728650676470,"user_tz":180,"elapsed":1145,"user":{"displayName":"Lily","userId":"16660113992098989816"}},"outputId":"59bbbc42-d9fa-4efb-8dd9-2d48a36f3345"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}